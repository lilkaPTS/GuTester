create table users
(
    users_id  int,
    email    varchar(255)  not null,
    name     varchar(255)  not null,
    password varchar(255)  not null,
    role     varchar(255)  not null,
    status   varchar(255)  not null,
    primary key (users_id)
);

create table confirmation_codes
(
    confirmation_code_id int8 generated by default as identity,
    code                 varchar(255) not null,
    email                varchar(255) not null,
    primary key (confirmation_code_id)
);

create table os
(
    os_id int,
    name varchar(255),
    version varchar(255),
    primary key (os_id)
);

create table device_manufacturer
(
    device_manufacturer_id int,
    name varchar(255),
    primary key (device_manufacturer_id)
);

create table mobile_operator
(
    mobile_operator_id int,
    name varchar(255),
    primary key (mobile_operator_id)
);

create table network
(
    network_id int,
    name varchar(255),
    primary key (network_id)
);

create table device
(
    device_id int,
    order_link varchar(255),
    device_manufacturer_id int,
    device_model varchar(255),
    os_id int,
    release_year int2,
    status varchar(255),
    primary key (device_id),
    CONSTRAINT fk_os FOREIGN KEY (os_id) references os(os_id),
    CONSTRAINT fk_device_manufacturer FOREIGN KEY (device_manufacturer_id) references device_manufacturer(device_manufacturer_id)
);

create table tester
(
    tester_id int,
    users_id int,
    device_id int,
    os_id int,
    mobile_operator_id int,
    rating numeric(3,2) default 0.00,
    primary key (tester_id),
    CONSTRAINT fk_os FOREIGN KEY (os_id) references os(os_id),
    CONSTRAINT fk_users FOREIGN KEY (users_id) references users(users_id),
    CONSTRAINT fk_device FOREIGN KEY (device_id) references device(device_id),
    CONSTRAINT fk_mobile_operator FOREIGN KEY (mobile_operator_id) references mobile_operator(mobile_operator_id)
);

create table tester_network
(
    tester_id int,
    network_id int,
    PRIMARY KEY (tester_id, network_id),
    CONSTRAINT fk_tester FOREIGN KEY (tester_id) references tester(tester_id),
    CONSTRAINT fk_network FOREIGN KEY (network_id) references network(network_id)
);

create table developer
(
    developer_id int,
    users_id int,
    rating numeric(3,2) default 0.00,
    primary key (developer_id),
    CONSTRAINT fk_users FOREIGN KEY (users_id) references users(users_id)
);

create table admin
(
    admin_id int,
    users_id int,
    primary key (admin_id),
    CONSTRAINT fk_users FOREIGN KEY (users_id) references users(users_id)
);

create table orders
(
    orders_id int,
    developer_id int,
    os_name varchar(255),
    source_link varchar(255),
    title varchar(255),
    description varchar(3000),
    required_number_of_testers int2,
    device_release_year_start int2,
    device_release_year_end int2,
    contact_email varchar(255),
    status varchar(255),
    orders_creation_date date,
    admin_comment varchar(3000),
    primary key (orders_id),
    CONSTRAINT fk_device FOREIGN KEY (developer_id) references developer(developer_id)
);

create table description_of_orders_errors
(
    description_of_orders_errors_id int,
    orders_id int,
    admin_id int,
    text varchar(3000),
    description_creation_date date,
    primary key (description_of_orders_errors_id),
    CONSTRAINT fk_orders FOREIGN KEY (orders_id) references orders(orders_id),
    CONSTRAINT fk_admin FOREIGN KEY (admin_id) references admin(admin_id)
);

create table orders_os
(
    orders_id int,
    os_id int,
    PRIMARY KEY (orders_id, os_id),
    CONSTRAINT fk_orders FOREIGN KEY (orders_id) references orders(orders_id),
    CONSTRAINT fk_os FOREIGN KEY (os_id) references os(os_id)
);

create table orders_device
(
    orders_id int,
    device_id int,
    PRIMARY KEY (orders_id, device_id),
    CONSTRAINT fk_orders FOREIGN KEY (orders_id) references orders(orders_id),
    CONSTRAINT fk_device FOREIGN KEY (device_id) references device(device_id)
);

create table orders_device_manufacturer
(
    orders_id int,
    device_manufacturer_id int,
    PRIMARY KEY (orders_id, device_manufacturer_id),
    CONSTRAINT fk_orders FOREIGN KEY (orders_id) references orders(orders_id),
    CONSTRAINT fk_device_manufacturer FOREIGN KEY (device_manufacturer_id) references device_manufacturer(device_manufacturer_id)
);

create table orders_mobile_operator
(
    orders_id int,
    mobile_operator_id int,
    PRIMARY KEY (orders_id, mobile_operator_id),
    CONSTRAINT fk_orders FOREIGN KEY (orders_id) references orders(orders_id),
    CONSTRAINT fk_mobile_operator FOREIGN KEY (mobile_operator_id) references mobile_operator(mobile_operator_id)
);

create table orders_network
(
    orders_id int,
    network_id int,
    PRIMARY KEY (orders_id, network_id),
    CONSTRAINT fk_orders FOREIGN KEY (orders_id) references orders(orders_id),
    CONSTRAINT fk_network FOREIGN KEY (network_id) references network(network_id)
);

create table orders_approved_tester
(
    orders_id int,
    tester_id int,
    PRIMARY KEY (orders_id, tester_id),
    CONSTRAINT fk_orders FOREIGN KEY (orders_id) references orders(orders_id),
    CONSTRAINT fk_tester FOREIGN KEY (tester_id) references tester(tester_id)
);

create table orders_unapproved_tester (
                                          orders_id int,
                                          tester_id int,
                                          PRIMARY KEY (orders_id, tester_id),
                                          CONSTRAINT fk_orders FOREIGN KEY (orders_id) references orders(orders_id),
                                          CONSTRAINT fk_tester FOREIGN KEY (tester_id) references tester(tester_id)
);


create table orders_agreed_tester (
                                      orders_id int,
                                      tester_id int,
                                      PRIMARY KEY (orders_id, tester_id),
                                      CONSTRAINT fk_orders FOREIGN KEY (orders_id) references orders(orders_id),
                                      CONSTRAINT fk_tester FOREIGN KEY (tester_id) references tester(tester_id)
)


