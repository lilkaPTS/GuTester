create table "user"
(
    user_id  bigint generated always as identity,
    email    varchar(255)  not null,
    name     varchar(255)  not null,
    password varchar(255)  not null,
    role     varchar(255)  not null,
    status   varchar(255)  not null,
    primary key (user_id)
);

create table confirmation_codes
(
    confirmation_code_id int8 generated by default as identity,
    code                 varchar(255) not null,
    email                varchar(255) not null,
    primary key (confirmation_code_id)
);

create table os
(
    os_id bigint generated always as identity,
    name varchar(255),
    version varchar(255),
    primary key (os_id)
);

create table device_manufacturer
(
    device_manufacturer_id bigint generated always as identity,
    name varchar(255),
    primary key (device_manufacturer_id)
);

create table mobile_operator
(
    mobile_operator_id bigint generated always as identity,
    name varchar(255),
    primary key (mobile_operator_id)
);

create table network
(
    network_id bigint generated always as identity,
    name varchar(255),
    primary key (network_id)
);

create table device
(
    device_id bigint generated always as identity,
    order_link varchar(255),
    device_manufacturer_id bigint,
    device_model varchar(255),
    os_id bigint,
--     screen_diagonal numeric(4,1),
--     screen_resolution varchar(255),
--     cpu_title varchar(255),
--     number_of_cpu_cores int2,
--     cpu_frequency numeric(4,2),
--     ram_size varchar(255),
--     rom_size varchar(255),
    release_year int2,
    status varchar(255),
    primary key (device_id),
    CONSTRAINT fk_os FOREIGN KEY (os_id) references os(os_id),
    CONSTRAINT fk_device_manufacturer FOREIGN KEY (device_manufacturer_id) references device_manufacturer(device_manufacturer_id)
);

create table tester
(
    tester_id bigint generated always as identity,
    user_id bigint,
    device_id bigint,
    os_id bigint,
    mobile_operator_id bigint,
    rating numeric(3,2),
    primary key (tester_id),
    CONSTRAINT fk_os FOREIGN KEY (os_id) references os(os_id),
    CONSTRAINT fk_user FOREIGN KEY (user_id) references "user"(user_id),
    CONSTRAINT fk_device FOREIGN KEY (device_id) references device(device_id),
    CONSTRAINT fk_mobile_operator FOREIGN KEY (mobile_operator_id) references mobile_operator(mobile_operator_id)
);

create table tester_network
(
    tester_id bigint,
    network_id bigint,
    PRIMARY KEY (tester_id, network_id),
    CONSTRAINT fk_tester FOREIGN KEY (tester_id) references tester(tester_id),
    CONSTRAINT fk_network FOREIGN KEY (network_id) references network(network_id)
);

create table developer
(
    developer_id bigint generated always as identity,
    user_id bigint,
    rating numeric(3,2),
    primary key (developer_id),
    CONSTRAINT fk_user FOREIGN KEY (user_id) references "user"(user_id)
);

create table admin
(
    admin_id bigint generated always as identity,
    user_id bigint,
    primary key (admin_id),
    CONSTRAINT fk_user FOREIGN KEY (user_id) references "user"(user_id)
);

create table "order"
(
    order_id bigint generated always as identity,
    developer_id bigint,
    os_name varchar(255),
    source_link varchar(255),
    title varchar(255),
    description varchar(3000),
    required_number_of_testers int2,
    device_release_year_start int2,
    device_release_year_end int2,
    status varchar(255),
    order_creation_date date,
    primary key (order_id),
    CONSTRAINT fk_device FOREIGN KEY (developer_id) references developer(developer_id)
);

create table description_of_order_errors
(
    description_of_order_errors_id bigint generated always as identity,
    order_id bigint,
    admin_id bigint,
    text varchar(3000),
    description_creation_date date,
    primary key (description_of_order_errors_id),
    CONSTRAINT fk_order FOREIGN KEY (order_id) references "order"(order_id),
    CONSTRAINT fk_admin FOREIGN KEY (admin_id) references admin(admin_id)
);

create table order_os
(
    order_id bigint,
    os_id bigint,
    PRIMARY KEY (order_id, os_id),
    CONSTRAINT fk_order FOREIGN KEY (order_id) references "order"(order_id),
    CONSTRAINT fk_os FOREIGN KEY (os_id) references os(os_id)
);

create table order_device
(
    order_id bigint,
    device_id bigint,
    PRIMARY KEY (order_id, device_id),
    CONSTRAINT fk_order FOREIGN KEY (order_id) references "order"(order_id),
    CONSTRAINT fk_device FOREIGN KEY (device_id) references device(device_id)
);

create table order_device_manufacturer
(
    order_id bigint,
    device_manufacturer_id bigint,
    PRIMARY KEY (order_id, device_manufacturer_id),
    CONSTRAINT fk_order FOREIGN KEY (order_id) references "order"(order_id),
    CONSTRAINT fk_device_manufacturer FOREIGN KEY (device_manufacturer_id) references device_manufacturer(device_manufacturer_id)
);

create table order_mobile_operator
(
    order_id bigint,
    mobile_operator_id bigint,
    PRIMARY KEY (order_id, mobile_operator_id),
    CONSTRAINT fk_order FOREIGN KEY (order_id) references "order"(order_id),
    CONSTRAINT fk_mobile_operator FOREIGN KEY (mobile_operator_id) references mobile_operator(mobile_operator_id)
);

create table order_network
(
    order_id bigint,
    network_id bigint,
    PRIMARY KEY (order_id, network_id),
    CONSTRAINT fk_order FOREIGN KEY (order_id) references "order"(order_id),
    CONSTRAINT fk_network FOREIGN KEY (network_id) references network(network_id)
);

create table order_tester
(
    order_id bigint,
    tester_id bigint,
    PRIMARY KEY (order_id, tester_id),
    CONSTRAINT fk_order FOREIGN KEY (order_id) references "order"(order_id),
    CONSTRAINT fk_tester FOREIGN KEY (tester_id) references tester(tester_id)
);

